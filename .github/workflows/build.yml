name: Build EDRFreeze

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [closed]

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download MinGW
        run: |
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest -Uri https://github.com/brechtsanders/winlibs_mingw/releases/download/15.2.0posix-13.0.0-msvcrt-r1/winlibs-x86_64-posix-seh-gcc-15.2.0-mingw-w64msvcrt-13.0.0-r1.7z -OutFile mingw.7z
        shell: powershell

      - name: Extract MinGW
        run: 7z x mingw.7z -oC:\mingw -y > nul
        shell: cmd

      - name: Set up environment
        run: |
          echo "C:\mingw\bin" >> $env:GITHUB_PATH
        shell: powershell

      - name: Verify GCC
        run: |
          gcc --version
        shell: cmd

      - name: Configure MSVC and Build
        shell: cmd
        run: |
          call "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat" 
          cl /EHsc /W3 /O2 /MT /DUNICODE /D_UNICODE /DWIN32 /D_CONSOLE EDR-Freeze.cpp PPLHelp.cpp ProcessMisc.cpp /link /SUBSYSTEM:CONSOLE /OUT:EDRFreeze-msvc.exe

      - name: Build GNU
        run: g++ -w -Os -flto -static -std=c++17 -Wall -Wextra -s -DUNICODE -D_UNICODE -municode EDR-Freeze.cpp PPLHelp.cpp ProcessMisc.cpp -o EDRFreeze-gnu.exe
        shell: cmd

      - name: List build directory
        shell: cmd
        run: dir

      - name: Get short commit hash
        id: vars
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
        shell: bash

      - name: Delete existing tag and release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete v1.0-${{ env.SHORT_SHA }} --cleanup-tag --yes || echo "No release or tag found for v1.0-${{ env.SHORT_SHA }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0-${{ env.SHORT_SHA }}
          release_name: EDRFreeze v1.0-${{ env.SHORT_SHA }}
          body: "Automated release for commit ${{ env.SHORT_SHA }}"

      - name: Upload MSVC Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: EDRFreeze-msvc.exe
          asset_name: EDRFreeze-msvc.exe
          asset_content_type: application/octet-stream

      - name: Upload GNU Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: EDRFreeze-gnu.exe
          asset_name: EDRFreeze-gnu.exe
          asset_content_type: application/octet-stream